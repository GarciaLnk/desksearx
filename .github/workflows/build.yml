name: Build

on: [push, pull_request]

jobs:
  build:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest]
        java: ["21"]
        distribution: ["graalvm"]
      fail-fast: false
    name: ${{ matrix.os }}
    steps:
      - name: Git checkout
        uses: actions/checkout@v4
      - name: Set up MSVC Dev Prompt
        if: matrix.os == 'windows-latest'
        uses: TheMrMilchmann/setup-msvc-dev@v3
        with:
          arch: x64
      - name: Set up JDK (GraalVM)
        uses: graalvm/setup-graalvm@v1
        with:
          distribution: ${{ matrix.distribution }}
          java-version: ${{ matrix.java }}
      - name: Echo JAVA_HOME
        run: echo $JAVA_HOME
      - name: Verify Gradle Wrapper
        uses: gradle/wrapper-validation-action@v1
      - name: Execute build
        run: ./gradlew --info --stacktrace build
      - name: Execute jlink
        run: ./gradlew --info --stacktrace jlink
      - name: Execute jpackage
        run: ./gradlew --info --stacktrace jpackage
      - name: Execute nativeCompile
        run: ./gradlew --info --stacktrace nativeCompile
      - name: Build AppImage
        if: matrix.os == 'ubuntu-latest'
        uses: AppImageCrafters/build-appimage@master
        with:
          recipe: AppImageBuilder.yml
      - name: Build .exe
        if: matrix.os == 'windows-latest'
        run: |
          EDITBIN /SUBSYSTEM:WINDOWS build/native/nativeCompile/desksearx.exe
          choco install rcedit -y || exit
          rcedit --set-icon src\main\resources\package\desksearx.ico build\native\nativeCompile\desksearx.exe
      - name: Upload image zip as an artifact
        uses: actions/upload-artifact@v3
        with:
          name: desksearx-${{ matrix.os }}
          path: build/app-image/desksearx
      - name: Upload native binary as an artifact
        uses: actions/upload-artifact@v3
        with:
          name: desksearx-${{ matrix.os }}-binary
          path: build/native/nativeCompile/desksearx*
      - name: Upload AppImage as an artifact
        uses: actions/upload-artifact@v3
        with:
          name: desksearx-linux-appimage
          path: ./*.AppImage
      - name: Upload .exe as an artifact
        uses: actions/upload-artifact@v3
        with:
          name: desksearx-windows-exe
          path: build/*.exe
